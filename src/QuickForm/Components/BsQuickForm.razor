@typeparam TEntity where TEntity : class, new()
@inherits QuickForm<TEntity>

@{
    AdditionalAttributes ??= new Dictionary<string, object>();
    AdditionalAttributes.Add("class", "d-flex flex-column text-white text-start gap-3 rounded border p-3");

    ChildContent = context =>
        @<div class="d-flex flex-column">
            <label for="@context.EditorId" class="fw-bold">
                @context.DisplayName
            </label>

            @context.InputComponent("form-control border border-secondary p-1")

            @if (!string.IsNullOrEmpty(context.Description))
            {
                <span class="text-secondary">
                    @context.Description
                </span>
            }

            @if (!string.IsNullOrEmpty(context.ValidFeedback))
            {
                <span class="valid-feedback text-start text-success fw-bold">
                    @context.ValidFeedback
                </span>
            }

            @context.ValidationMessages("invalid-feedback text-start text-danger fw-bold")
    </div>;

    SubmitButtonTemplate =
        @<button type="submit" class="btn btn-outline-success text-success fw-bold py-2 px-4 rounded">
            @SubmitButtonText
        </button>;
}

@{
    base.BuildRenderTree(__builder);
}

@code
{
    /// <summary>
    /// The text to display on the submit button.
    /// </summary>
    [Parameter]
    public string SubmitButtonText { get; set; } = "Submit";
}